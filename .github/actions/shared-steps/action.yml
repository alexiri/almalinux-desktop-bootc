name: "Build and Push Container"

inputs:
  IMAGE_NAME:
    required: true
  VERSION_MAJOR:
    required: true
  VARIANT:
    required: true
  UID:
    required: true
  IMAGE_REGISTRY:
    required: true
  IMAGE_DEST:
    required: true
  REGISTRY_USER:
    required: true
  REGISTRY_PASSWORD:
    required: true

outputs:
  IMAGE:
    description: "Image name"
    value: ${{ steps.push.outputs.IMAGE }}
  TAG:
    description: "Image tag"
    value: ${{ steps.push.outputs.TAG }}
  DIGEST:
    description: "Image digest"
    value: ${{ steps.push.outputs.DIGEST }}
  VERSION_ID:
    description: "OS Version ID"
    value: ${{ steps.run_container.outputs.VERSION_ID }}

runs:
  using: "composite"
  steps:
    # Need to rewrite this to figure out if the image of that date is already built instead
    - name: Check update
      shell: bash
      run: |
        # 'dnf check-update'
        # exit codes:
        #   0 - no updates
        #   100 - updates available
        #   125 - tag/platform not found
        #   127 - command not found
        # res=0
        # podman run --quiet --rm ${{ inputs.IMAGE_REGISTRY }}/${{ inputs.IMAGE_NAME }}:${{ inputs.VERSION_MAJOR }} dnf check-update || res=$?
        # echo "res=${res}" >> "$GITHUB_ENV"
        # echo "Exit code: '$res'"
        echo "res=-1" >> "$GITHUB_ENV"

    - name: Log in to registry
      if: ${{ env.res != 0 }}
      shell: bash
      run: podman login ${{ inputs.IMAGE_REGISTRY }} -u ${{ inputs.REGISTRY_USER }} -p ${{ inputs.REGISTRY_PASSWORD }}

    - name: Build bootc container
      if: ${{ env.res != 0 }}
      shell: bash
      run: |
        make bootc \
          MAJOR=${{ inputs.VERSION_MAJOR }} \
          VARIANT=${{ inputs.VARIANT }} \
          ARCH=${{ env.PLATFORM }} \
          IMAGE_NAME=${{ inputs.IMAGE_NAME }}

    - name: Run container
      id: run_container
      if: ${{ env.res != 0 }}
      shell: bash
      run: |
        # Let's see if we have something that makes sense
        sudo podman run --rm localhost/${{ inputs.IMAGE_NAME }} bootc --version

        # Let the image tell you what it is
        VERSION_ID=$(sudo podman run --rm localhost/${{ inputs.IMAGE_NAME }} grep "^VERSION_ID=" /etc/os-release | cut -d'=' -f2 | tr -d '"')
        echo "VERSION_ID=${VERSION_ID}"
        echo "VERSION_ID=${VERSION_ID}" >> "$GITHUB_OUTPUT"

    - name: Push to registry
      id: push
      if: ${{ env.res != 0 }}
      shell: bash
      run: |
        platform="${{ env.PLATFORM }}"
        ARCH=${platform#linux/}

        TAG="${{ inputs.VERSION_MAJOR }}-${{ inputs.VARIANT }}-${ARCH}-${{ inputs.UID }}"
        sudo podman push localhost/${{ inputs.IMAGE_NAME }} --digestfile=/tmp/digestfile \
          docker://${{ inputs.IMAGE_DEST }}/${{ inputs.IMAGE_NAME }}:${TAG}

        DIGEST=$(cat /tmp/digestfile)
        echo "DIGEST=${DIGEST}" >> $GITHUB_OUTPUT
        echo "IMAGE=${{ inputs.IMAGE_DEST }}/${{ inputs.IMAGE_NAME }}" >> $GITHUB_OUTPUT
        echo "TAG=${TAG}" >> $GITHUB_OUTPUT
